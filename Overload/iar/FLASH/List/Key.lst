###############################################################################
#
# IAR ANSI C/C++ Compiler V8.20.2.14835/W32 for ARM       08/Jun/2018  18:03:58
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\workspace\LPLD_OSKinetis_V3\project\Overload3\app\Key.c
#    Command line =  
#        -f C:\Users\JoyC\AppData\Local\Temp\EWDB01.tmp
#        (D:\workspace\LPLD_OSKinetis_V3\project\Overload3\app\Key.c -D
#        LPLD_K60 -D USE_K60DZ10 -lCN
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\FLASH\List -lB
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\FLASH\List -o
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\FLASH\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "D:\Program Files\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\app\ -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\CPU\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\common\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\LPLD\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\FatFs\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\USB\common\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\USB\class\
#        -Om -I "D:\Program Files\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\Include\" -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\FLASH\List\Key.lst
#    Object file  =  
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\FLASH\Obj\Key.o
#
###############################################################################

D:\workspace\LPLD_OSKinetis_V3\project\Overload3\app\Key.c
      1          #include "include.h"
      2          

   \                                 In section .bss, align 4
      3          GPIO_InitTypeDef key_init_struct;
   \                     key_init_struct:
   \   00000000                      DS8 20

   \                                 In section .data, align 4
      4          uint32 duty=1000;
   \                     duty:
   \   00000000   0x000003E8         DC32 1000

   \                                 In section .text, align 2, keep-with-next
      5          void Key_Handler(void)
      6          {
   \                     Key_Handler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      7            DisableInterrupts;
   \   00000002   0xB672             CPSID    I
      8            if(LPLD_GPIO_IsPinxExt(PORTB,GPIO_Pin20))
   \   00000004   0x....             LDR.N    R0,??DataTable3  ;; 0x4004a0a0
   \   00000006   0x6801             LDR      R1,[R0, #+0]
   \   00000008   0x02C9             LSLS     R1,R1,#+11
   \   0000000A   0xD506             BPL.N    ??Key_Handler_0
      9            {
     10              if(LPLD_GPIO_IsPinxExt(PORTB,GPIO_Pin20))
   \   0000000C   0x6801             LDR      R1,[R0, #+0]
   \   0000000E   0x02C9             LSLS     R1,R1,#+11
   \   00000010   0xD503             BPL.N    ??Key_Handler_0
     11              {
     12                //@
     13                duty-=100;
   \   00000012   0x....             LDR.N    R1,??DataTable3_1
   \   00000014   0x680A             LDR      R2,[R1, #+0]
   \   00000016   0x3A64             SUBS     R2,R2,#+100
   \   00000018   0x600A             STR      R2,[R1, #+0]
     14              }
     15          
     16            }
     17            if(LPLD_GPIO_IsPinxExt(PORTB,GPIO_Pin21))
   \                     ??Key_Handler_0: (+1)
   \   0000001A   0x6801             LDR      R1,[R0, #+0]
   \   0000001C   0x0289             LSLS     R1,R1,#+10
   \   0000001E   0xD506             BPL.N    ??Key_Handler_1
     18            {
     19              if(LPLD_GPIO_IsPinxExt(PORTB,GPIO_Pin21))
   \   00000020   0x6801             LDR      R1,[R0, #+0]
   \   00000022   0x0289             LSLS     R1,R1,#+10
   \   00000024   0xD503             BPL.N    ??Key_Handler_1
     20              {
     21                //@
     22                duty+=100;
   \   00000026   0x....             LDR.N    R1,??DataTable3_1
   \   00000028   0x680A             LDR      R2,[R1, #+0]
   \   0000002A   0x3264             ADDS     R2,R2,#+100
   \   0000002C   0x600A             STR      R2,[R1, #+0]
     23              }
     24          
     25            }
     26            if(LPLD_GPIO_IsPinxExt(PORTB,GPIO_Pin22))
   \                     ??Key_Handler_1: (+1)
   \   0000002E   0x6801             LDR      R1,[R0, #+0]
   \   00000030   0x0249             LSLS     R1,R1,#+9
   \   00000032   0xD508             BPL.N    ??Key_Handler_2
     27            {
     28              if(LPLD_GPIO_IsPinxExt(PORTB,GPIO_Pin22))
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0x0240             LSLS     R0,R0,#+9
   \   00000038   0xD505             BPL.N    ??Key_Handler_2
     29              {
     30                //@
     31                if(should_send==0)
   \   0000003A   0x....             LDR.N    R0,??DataTable3_2
   \   0000003C   0x7801             LDRB     R1,[R0, #+0]
   \   0000003E   0x1E49             SUBS     R1,R1,#+1
   \   00000040   0x4189             SBCS     R1,R1,R1
   \   00000042   0x0FC9             LSRS     R1,R1,#+31
   \   00000044   0x7001             STRB     R1,[R0, #+0]
     32                {
     33                  should_send=1;
     34                }
     35                else should_send=0;
     36              }
     37            }
     38           // Morter_Drive(duty);
     39            LCD_Flush();
   \                     ??Key_Handler_2: (+1)
   \   00000046   0x.... 0x....      BL       LCD_Flush
     40            EnableInterrupts;
   \   0000004A   0xB662             CPSIE    I
     41          }
   \   0000004C   0xBD01             POP      {R0,PC}          ;; return
     42          
     43          

   \                                 In section .text, align 2, keep-with-next
     44          void LCD_Flush(void)
     45          {
   \                     LCD_Flush: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB099             SUB      SP,SP,#+100
     46            LCD_CLS();
   \   00000004   0x.... 0x....      BL       LCD_CLS
     47            char str[100];
     48            sprintf(str, "duty:\t%d", duty);
   \   00000008   0x....             LDR.N    R0,??DataTable3_1
   \   0000000A   0x6802             LDR      R2,[R0, #+0]
   \   0000000C   0x.... 0x....      ADR.W    R1,?_0
   \   00000010   0x4668             MOV      R0,SP
   \   00000012   0x.... 0x....      BL       sprintf
     49            LCD_P6x8Str(0, 0, str);
   \   00000016   0x466A             MOV      R2,SP
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x4608             MOV      R0,R1
   \   0000001C   0x.... 0x....      BL       LCD_P6x8Str
     50          }
   \   00000020   0xB019             ADD      SP,SP,#+100
   \   00000022   0xBD00             POP      {PC}             ;; return
     51          
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void Key_Init(void)
     54          {
   \                     Key_Init: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
     55            key_init_struct.GPIO_PTx=PTB;
   \   00000002   0x....             LDR.N    R4,??DataTable3_3
   \   00000004   0x....             LDR.N    R0,??DataTable3_4  ;; 0x400ff040
   \   00000006   0x6020             STR      R0,[R4, #+0]
     56            key_init_struct.GPIO_Pins=GPIO_Pin20|GPIO_Pin21|GPIO_Pin22;
   \   00000008   0xF44F 0x00E0      MOV      R0,#+7340032
   \   0000000C   0x6060             STR      R0,[R4, #+4]
     57            key_init_struct.GPIO_Dir=DIR_INPUT;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x7320             STRB     R0,[R4, #+12]
     58            key_init_struct.GPIO_PinControl=IRQC_FA;
   \   00000012   0xF44F 0x2020      MOV      R0,#+655360
   \   00000016   0x60A0             STR      R0,[R4, #+8]
     59            key_init_struct.GPIO_Isr=Key_Handler;
   \   00000018   0x....             LDR.N    R0,??DataTable3_5
   \   0000001A   0x6120             STR      R0,[R4, #+16]
     60            LPLD_GPIO_Init(key_init_struct);
   \   0000001C   0x4621             MOV      R1,R4
   \   0000001E   0xB084             SUB      SP,SP,#+16
   \   00000020   0x4668             MOV      R0,SP
   \   00000022   0x2214             MOVS     R2,#+20
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000028   0xBC0F             POP      {R0-R3}
   \   0000002A   0x.... 0x....      BL       LPLD_GPIO_Init
     61            LPLD_GPIO_EnableIrq(key_init_struct);
   \   0000002E   0x4621             MOV      R1,R4
   \   00000030   0xB084             SUB      SP,SP,#+16
   \   00000032   0x4668             MOV      R0,SP
   \   00000034   0x2214             MOVS     R2,#+20
   \   00000036   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000003A   0xBC0F             POP      {R0-R3}
   \   0000003C   0x.... 0x....      BL       LPLD_GPIO_EnableIrq
     62          }
   \   00000040   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x4004A0A0         DC32     0x4004a0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     duty

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     should_send

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     key_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     Key_Handler

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x64 0x75          DC8 "duty:\t%d"
   \              0x74 0x79    
   \              0x3A 0x09    
   \              0x25 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Key_Handler
         8   -> LCD_Flush
      32   Key_Init
        16   -> LPLD_GPIO_EnableIrq
        16   -> LPLD_GPIO_Init
        32   -> __aeabi_memcpy4
     104   LCD_Flush
       104   -> LCD_CLS
       104   -> LCD_P6x8Str
       104   -> sprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
      12  ?_0
      78  Key_Handler
      66  Key_Init
      36  LCD_Flush
       4  duty
      20  key_init_struct

 
  20 bytes in section .bss
   4 bytes in section .data
 216 bytes in section .text
 
 216 bytes of CODE memory
  24 bytes of DATA memory

Errors: none
Warnings: 3
