###############################################################################
#
# IAR ANSI C/C++ Compiler V8.20.2.14835/W32 for ARM       08/Jun/2018  18:03:57
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\app\Camera.c
#    Command line =  
#        -f C:\Users\JoyC\AppData\Local\Temp\EWD773.tmp
#        (D:\workspace\LPLD_OSKinetis_V3\project\Overload3\app\Camera.c -D
#        LPLD_K60 -D USE_K60DZ10 -lCN
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\FLASH\List -lB
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\FLASH\List -o
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\FLASH\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "D:\Program Files\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\app\ -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\CPU\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\common\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\LPLD\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\FatFs\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\USB\common\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\..\..\..\lib\USB\class\
#        -Om -I "D:\Program Files\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\Include\" -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\FLASH\List\Camera.lst
#    Object file  =  
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload3\iar\FLASH\Obj\Camera.o
#
###############################################################################

D:\workspace\LPLD_OSKinetis_V3\project\Overload3\app\Camera.c
      1          #include "include.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void __NVIC_EnableIRQ(IRQn_Type)
   \                     __NVIC_EnableIRQ: (+1)
   \   00000000   0x0001             MOVS     R1,R0
   \   00000002   0xD408             BMI.N    ??__NVIC_EnableIRQ_0
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0xF000 0x001F      AND      R0,R0,#0x1F
   \   0000000A   0xFA02 0xF000      LSL      R0,R2,R0
   \   0000000E   0x....             LDR.N    R2,??DataTable5  ;; 0xe000e100
   \   00000010   0x0949             LSRS     R1,R1,#+5
   \   00000012   0xF842 0x0021      STR      R0,[R2, R1, LSL #+2]
   \                     ??__NVIC_EnableIRQ_0: (+1)
   \   00000016   0x4770             BX       LR               ;; return

   \                                 In section .bss, align 4
      2          GPIO_InitTypeDef Data_init_struct; // @@@@@@@@@@
   \                     Data_init_struct:
   \   00000000                      DS8 20
      3          GPIO_InitTypeDef PCLK_init_struct; // PCLK@@@@@@@@
   \                     PCLK_init_struct:
   \   00000014                      DS8 20
      4          GPIO_InitTypeDef HRF_init_struct;  // HRF@@@@@@@@
   \                     HRF_init_struct:
   \   00000028                      DS8 20
      5          GPIO_InitTypeDef VSY_init_struct;  // VSY@@@@@@@@
   \                     VSY_init_struct:
   \   0000003C                      DS8 20
      6          

   \                                 In section .bss, align 4
      7          UART_InitTypeDef  uart_init_struct;
   \                     uart_init_struct:
   \   00000000                      DS8 28
      8          

   \                                 In section .bss, align 4
      9          uint8 Img_Data[V][H]={0};  // @@@@@@@
   \                     Img_Data:
   \   00000000                      DS8 25280

   \                                 In section .bss, align 4
     10          uint32 Row_Count=0;
   \                     Row_Count:
   \   00000000                      DS8 4
     11          uint32 Field_Count=0;
   \                     Field_Count:
   \   00000004                      DS8 4
     12          uint32 Has_Img=0;
   \                     Has_Img:
   \   00000008                      DS8 4
     13          // @@@@@@@@@

   \                                 In section .text, align 2, keep-with-next
     14          void Camera_Handler(void)
     15          {
   \                     Camera_Handler: (+1)
   \   00000000   0xB418             PUSH     {R3,R4}
     16            //DisableInterrupts;
     17            
     18            // @@@
     19            if(LPLD_GPIO_IsPinxExt(PORTC,GPIO_Pin6))
   \   00000002   0x....             LDR.N    R2,??DataTable5_1  ;; 0x4004b0a0
   \   00000004   0x6810             LDR      R0,[R2, #+0]
   \   00000006   0x0640             LSLS     R0,R0,#+25
   \   00000008   0xD517             BPL.N    ??Camera_Handler_0
     20            {
     21              LPLD_GPIO_ClearIntFlag(PORTC);
   \   0000000A   0xF04F 0x30FF      MOV      R0,#-1
   \   0000000E   0x6010             STR      R0,[R2, #+0]
     22              Row_Count++;
   \   00000010   0x....             LDR.N    R3,??DataTable5_2
   \   00000012   0x6818             LDR      R0,[R3, #+0]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x6018             STR      R0,[R3, #+0]
     23              if(Row_Count%3==0 && Row_Count/3<V && Field_Count==1)
   \   00000018   0x2103             MOVS     R1,#+3
   \   0000001A   0xFBB0 0xF4F1      UDIV     R4,R0,R1
   \   0000001E   0xEB04 0x0144      ADD      R1,R4,R4, LSL #+1
   \   00000022   0x1A40             SUBS     R0,R0,R1
   \   00000024   0xD109             BNE.N    ??Camera_Handler_0
   \   00000026   0x2C50             CMP      R4,#+80
   \   00000028   0xD207             BCS.N    ??Camera_Handler_0
   \   0000002A   0x6858             LDR      R0,[R3, #+4]
   \   0000002C   0x2801             CMP      R0,#+1
   \   0000002E   0xD104             BNE.N    ??Camera_Handler_0
     24              {
     25                LPLD_DMA_EnableReq(DMA_CH0);
   \   00000030   0x....             LDR.N    R0,??DataTable5_3  ;; 0x4000800c
   \   00000032   0x6801             LDR      R1,[R0, #+0]
   \   00000034   0xF041 0x0101      ORR      R1,R1,#0x1
   \   00000038   0x6001             STR      R1,[R0, #+0]
     26              }
     27              
     28            }
     29            
     30            
     31            // @@@
     32            if(LPLD_GPIO_IsPinxExt(PORTC,GPIO_Pin7))
   \                     ??Camera_Handler_0: (+1)
   \   0000003A   0x6810             LDR      R0,[R2, #+0]
   \   0000003C   0x0600             LSLS     R0,R0,#+24
   \   0000003E   0xD517             BPL.N    ??Camera_Handler_1
     33            {
     34              LPLD_GPIO_ClearIntFlag(PORTC);
   \   00000040   0xF04F 0x30FF      MOV      R0,#-1
   \   00000044   0x6010             STR      R0,[R2, #+0]
     35              
     36              if(Field_Count==0)
   \   00000046   0x....             LDR.N    R1,??DataTable5_2
   \   00000048   0x6848             LDR      R0,[R1, #+4]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD109             BNE.N    ??Camera_Handler_2
     37              {
     38                Row_Count=0;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x6008             STR      R0,[R1, #+0]
     39                Field_Count=1;
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x6048             STR      R0,[R1, #+4]
     40                Has_Img=0;
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x6088             STR      R0,[R1, #+8]
     41                LPLD_DMA_LoadDstAddr(DMA_CH0,Img_Data);
   \   0000005A   0x....             LDR.N    R0,??DataTable5_4
   \   0000005C   0x....             LDR.N    R1,??DataTable5_5  ;; 0x40009010
   \   0000005E   0x6008             STR      R0,[R1, #+0]
   \   00000060   0xE006             B.N      ??Camera_Handler_1
     42              }else{
     43                Field_Count=0;
   \                     ??Camera_Handler_2: (+1)
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x6048             STR      R0,[R1, #+4]
     44                Has_Img=1;
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0x6088             STR      R0,[R1, #+8]
     45                Img_Handler();
   \   0000006A   0xBC11             POP      {R0,R4}
   \   0000006C   0x.... 0x....      B.W      Img_Handler
     46              }
     47          
     48            }
     49            //EnableInterrupts; 
     50          }
   \                     ??Camera_Handler_1: (+1)
   \   00000070   0xBC11             POP      {R0,R4}
   \   00000072   0x4770             BX       LR               ;; return
     51          
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void Camera_GPIO_Init(void)
     54          {
   \                     Camera_GPIO_Init: (+1)
   \   00000000   0xE92D 0x41FC      PUSH     {R2-R8,LR}
     55            //@@@@@@@(PTD0~PTD7)
     56            Data_init_struct.GPIO_PTx=PTD;
   \   00000004   0x....             LDR.N    R4,??DataTable5_6  ;; 0x400ff080
   \   00000006   0x....             LDR.N    R5,??DataTable5_7
   \   00000008   0xF104 0x0040      ADD      R0,R4,#+64
   \   0000000C   0x6028             STR      R0,[R5, #+0]
     57            Data_init_struct.GPIO_Pins=GPIO_Pin0_7;
   \   0000000E   0x20FF             MOVS     R0,#+255
   \   00000010   0x6068             STR      R0,[R5, #+4]
     58            Data_init_struct.GPIO_Dir=DIR_INPUT;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x7328             STRB     R0,[R5, #+12]
     59            Data_init_struct.GPIO_PinControl=INPUT_PULL_UP;
   \   00000016   0x2003             MOVS     R0,#+3
   \   00000018   0x60A8             STR      R0,[R5, #+8]
     60            LPLD_GPIO_Init(Data_init_struct);
   \   0000001A   0x4629             MOV      R1,R5
   \   0000001C   0xB084             SUB      SP,SP,#+16
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x2214             MOVS     R2,#+20
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000026   0xBC0F             POP      {R0-R3}
   \   00000028   0x.... 0x....      BL       LPLD_GPIO_Init
     61            
     62            //PCLK@@@(PTA19)
     63            PCLK_init_struct.GPIO_PTx=PTA;
   \   0000002C   0x....             LDR.N    R0,??DataTable5_8  ;; 0x400ff000
   \   0000002E   0x6168             STR      R0,[R5, #+20]
     64            PCLK_init_struct.GPIO_Pins=GPIO_Pin19;
   \   00000030   0xF44F 0x2000      MOV      R0,#+524288
   \   00000034   0x61A8             STR      R0,[R5, #+24]
     65            PCLK_init_struct.GPIO_Dir=DIR_INPUT;
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0xF885 0x0020      STRB     R0,[R5, #+32]
     66            PCLK_init_struct.GPIO_PinControl=IRQC_DMARI;
   \   0000003C   0xF44F 0x3080      MOV      R0,#+65536
   \   00000040   0x61E8             STR      R0,[R5, #+28]
     67            LPLD_GPIO_Init(PCLK_init_struct);
   \   00000042   0xF105 0x0114      ADD      R1,R5,#+20
   \   00000046   0xB084             SUB      SP,SP,#+16
   \   00000048   0x4668             MOV      R0,SP
   \   0000004A   0x2214             MOVS     R2,#+20
   \   0000004C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000050   0xBC0F             POP      {R0-R3}
   \   00000052   0x.... 0x....      BL       LPLD_GPIO_Init
     68            
     69            //@@@@@@(PTC6)
     70            HRF_init_struct.GPIO_PTx = PTC;
   \   00000056   0x62AC             STR      R4,[R5, #+40]
     71            HRF_init_struct.GPIO_Pins = GPIO_Pin6;
   \   00000058   0x2040             MOVS     R0,#+64
   \   0000005A   0x62E8             STR      R0,[R5, #+44]
     72            HRF_init_struct.GPIO_PinControl = IRQC_RI;
   \   0000005C   0xF44F 0x2810      MOV      R8,#+589824
   \   00000060   0xF8C5 0x8030      STR      R8,[R5, #+48]
     73            HRF_init_struct.GPIO_Dir = DIR_INPUT;
   \   00000064   0xF105 0x0634      ADD      R6,R5,#+52
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x7030             STRB     R0,[R6, #+0]
     74            HRF_init_struct.GPIO_Isr=Camera_Handler;
   \   0000006C   0x....             LDR.N    R7,??DataTable5_9
   \   0000006E   0x6077             STR      R7,[R6, #+4]
     75            LPLD_GPIO_Init(HRF_init_struct);
   \   00000070   0xF105 0x0128      ADD      R1,R5,#+40
   \   00000074   0xB084             SUB      SP,SP,#+16
   \   00000076   0x4668             MOV      R0,SP
   \   00000078   0x2214             MOVS     R2,#+20
   \   0000007A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000007E   0xBC0F             POP      {R0-R3}
   \   00000080   0x.... 0x....      BL       LPLD_GPIO_Init
     76            
     77            //@@@@@@(PTC7)
     78            VSY_init_struct.GPIO_PTx = PTC;
   \   00000084   0x60B4             STR      R4,[R6, #+8]
     79            VSY_init_struct.GPIO_Pins = GPIO_Pin7;
   \   00000086   0x2080             MOVS     R0,#+128
   \   00000088   0x60F0             STR      R0,[R6, #+12]
     80            VSY_init_struct.GPIO_PinControl = IRQC_RI;
   \   0000008A   0xF8C6 0x8010      STR      R8,[R6, #+16]
     81            VSY_init_struct.GPIO_Dir= DIR_INPUT;
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x7530             STRB     R0,[R6, #+20]
     82            VSY_init_struct.GPIO_Isr=Camera_Handler;
   \   00000092   0x61B7             STR      R7,[R6, #+24]
     83            LPLD_GPIO_Init(VSY_init_struct);
   \   00000094   0xF105 0x013C      ADD      R1,R5,#+60
   \   00000098   0xB084             SUB      SP,SP,#+16
   \   0000009A   0x4668             MOV      R0,SP
   \   0000009C   0x2214             MOVS     R2,#+20
   \   0000009E   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000A2   0xBC0F             POP      {R0-R3}
   \   000000A4   0x.... 0x....      BL       LPLD_GPIO_Init
     84          }
   \   000000A8   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
     85          
     86          
     87          
     88          

   \                                 In section .bss, align 4
     89          DMA_InitTypeDef  DMA_init_struct;  // DMA@@@@@@
   \                     DMA_init_struct:
   \   00000000                      DS8 44

   \                                 In section .text, align 2, keep-with-next
     90          void Camera_DMA_Init(void)
     91          {
   \                     Camera_DMA_Init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     92            DMA_init_struct.DMA_CHx=DMA_CH0;
   \   00000004   0x....             LDR.N    R1,??DataTable5_10
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x7008             STRB     R0,[R1, #+0]
     93            DMA_init_struct.DMA_Req=PORTA_DMAREQ;
   \   0000000A   0x2031             MOVS     R0,#+49
   \   0000000C   0x7048             STRB     R0,[R1, #+1]
     94            DMA_init_struct.DMA_MajorLoopCnt=H;
   \   0000000E   0xF44F 0x709E      MOV      R0,#+316
   \   00000012   0x8088             STRH     R0,[R1, #+4]
     95            DMA_init_struct.DMA_MinorByteCnt=1;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x6088             STR      R0,[R1, #+8]
     96            
     97            DMA_init_struct.DMA_SourceAddr=(uint32)&PTD->PDIR;
   \   00000018   0x....             LDR.N    R0,??DataTable5_11  ;; 0x400ff0d0
   \   0000001A   0x60C8             STR      R0,[R1, #+12]
     98            DMA_init_struct.DMA_DestAddr=(uint32)Img_Data;
   \   0000001C   0x....             LDR.N    R0,??DataTable5_4
   \   0000001E   0x6188             STR      R0,[R1, #+24]
     99            
    100            DMA_init_struct.DMA_DestDataSize=DMA_DST_8BIT;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x7708             STRB     R0,[R1, #+28]
    101            DMA_init_struct.DMA_SourceDataSize=DMA_SRC_8BIT;
   \   00000024   0x7408             STRB     R0,[R1, #+16]
    102            
    103            DMA_init_struct.DMA_DestAddrOffset=1;
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x83C8             STRH     R0,[R1, #+30]
    104            DMA_init_struct.DMA_AutoDisableReq=TRUE;
   \   0000002A   0xF881 0x0024      STRB     R0,[R1, #+36]
    105            LPLD_DMA_Init(DMA_init_struct);
   \   0000002E   0xB084             SUB      SP,SP,#+16
   \   00000030   0x4668             MOV      R0,SP
   \   00000032   0x222C             MOVS     R2,#+44
   \   00000034   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000038   0xBC0F             POP      {R0-R3}
   \   0000003A   0x.... 0x....      BL       LPLD_DMA_Init
    106          }
   \   0000003E   0xB007             ADD      SP,SP,#+28
   \   00000040   0xBD00             POP      {PC}             ;; return
    107          

   \                                 In section .text, align 2, keep-with-next
    108          void Camera_Init(void)
    109          {
   \                     Camera_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    110            Camera_GPIO_Init();
   \   00000002   0x.... 0x....      BL       Camera_GPIO_Init
    111            Camera_DMA_Init();
   \   00000006   0x.... 0x....      BL       Camera_DMA_Init
    112            enable_irq(PORTC_IRQn);
   \   0000000A   0x2059             MOVS     R0,#+89
   \   0000000C   0xE8BD 0x4002      POP      {R1,LR}
   \   00000010   0x....             B.N      __NVIC_EnableIRQ
    113          }
    114          
    115          

   \                                 In section .text, align 2, keep-with-next
    116          void Blue_Init(void)
    117          {
   \                     Blue_Init: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
    118            uart_init_struct.UART_Uartx=UART4;
   \   00000002   0x....             LDR.N    R1,??DataTable5_12
   \   00000004   0x....             LDR.N    R0,??DataTable5_13  ;; 0x400ea000
   \   00000006   0x6008             STR      R0,[R1, #+0]
    119            uart_init_struct.UART_BaudRate=115200;
   \   00000008   0xF44F 0x30E1      MOV      R0,#+115200
   \   0000000C   0x6048             STR      R0,[R1, #+4]
    120            uart_init_struct.UART_TxPin=PTE24;
   \   0000000E   0x2094             MOVS     R0,#+148
   \   00000010   0x7208             STRB     R0,[R1, #+8]
    121            uart_init_struct.UART_RxPin=PTE25;
   \   00000012   0x2095             MOVS     R0,#+149
   \   00000014   0x7248             STRB     R0,[R1, #+9]
    122            LPLD_UART_Init(uart_init_struct);
   \   00000016   0xB084             SUB      SP,SP,#+16
   \   00000018   0x4668             MOV      R0,SP
   \   0000001A   0x221C             MOVS     R2,#+28
   \   0000001C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000020   0xBC0F             POP      {R0-R3}
   \   00000022   0x.... 0x....      BL       LPLD_UART_Init
    123          }
   \   00000026   0xBD07             POP      {R0-R2,PC}       ;; return
    124          
    125          

   \                                 In section .text, align 2, keep-with-next
    126          void Send_Img(void)
    127          {
   \                     Send_Img: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    128            uint16 i,j;
    129            LPLD_UART_PutChar(UART4,0x01);
   \   00000002   0x....             LDR.N    R4,??DataTable5_13  ;; 0x400ea000
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x4620             MOV      R0,R4
   \   00000008   0x.... 0x....      BL       LPLD_UART_PutChar
    130            LPLD_UART_PutChar(UART4,0xFE);//@@@@@@
   \   0000000C   0xF06F 0x0501      MVN      R5,#+1
   \   00000010   0x4629             MOV      R1,R5
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       LPLD_UART_PutChar
    131            for(i=0;i<V;i++) 
   \   00000018   0x2600             MOVS     R6,#+0
   \   0000001A   0xE010             B.N      ??Send_Img_0
    132            {
    133              for(j=0;j<H;j++)
    134              {
    135                LPLD_UART_PutChar(UART4,Img_Data[i][j]);
   \                     ??Send_Img_1: (+1)
   \   0000001C   0x....             LDR.N    R1,??DataTable5_4
   \   0000001E   0xF44F 0x729E      MOV      R2,#+316
   \   00000022   0x4372             MULS     R2,R2,R6
   \   00000024   0x4411             ADD      R1,R1,R2
   \   00000026   0x5608             LDRSB    R0,[R1, R0]
   \   00000028   0x4601             MOV      R1,R0
   \   0000002A   0x4620             MOV      R0,R4
   \   0000002C   0x.... 0x....      BL       LPLD_UART_PutChar
    136              }
   \   00000030   0x1C7F             ADDS     R7,R7,#+1
   \                     ??Send_Img_2: (+1)
   \   00000032   0x4638             MOV      R0,R7
   \   00000034   0xB280             UXTH     R0,R0
   \   00000036   0xF5B0 0x7F9E      CMP      R0,#+316
   \   0000003A   0xDBEF             BLT.N    ??Send_Img_1
   \   0000003C   0x1C76             ADDS     R6,R6,#+1
   \                     ??Send_Img_0: (+1)
   \   0000003E   0x2E50             CMP      R6,#+80
   \   00000040   0xDA01             BGE.N    ??Send_Img_3
   \   00000042   0x2700             MOVS     R7,#+0
   \   00000044   0xE7F5             B.N      ??Send_Img_2
    137            }
    138            LPLD_UART_PutChar(UART4,0xFE);
   \                     ??Send_Img_3: (+1)
   \   00000046   0x4629             MOV      R1,R5
   \   00000048   0x4620             MOV      R0,R4
   \   0000004A   0x.... 0x....      BL       LPLD_UART_PutChar
    139            LPLD_UART_PutChar(UART4,0x01);
   \   0000004E   0x2101             MOVS     R1,#+1
   \   00000050   0x4620             MOV      R0,R4
   \   00000052   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   00000056   0x.... 0x....      B.W      LPLD_UART_PutChar
    140            
    141          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x4004B0A0         DC32     0x4004b0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     Row_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x4000800C         DC32     0x4000800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     Img_Data

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x40009010         DC32     0x40009010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     Data_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     Camera_Handler

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     DMA_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x400FF0D0         DC32     0x400ff0d0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x........         DC32     uart_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x400EA000         DC32     0x400ea000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   Blue_Init
        16   -> LPLD_UART_Init
        32   -> __aeabi_memcpy4
      48   Camera_DMA_Init
        32   -> LPLD_DMA_Init
        48   -> __aeabi_memcpy4
      48   Camera_GPIO_Init
        32   -> LPLD_GPIO_Init
        48   -> __aeabi_memcpy4
       8   Camera_Handler
         0   -> Img_Handler
       8   Camera_Init
         8   -> Camera_DMA_Init
         8   -> Camera_GPIO_Init
         0   -> __NVIC_EnableIRQ
      24   Send_Img
         0   -> LPLD_UART_PutChar
        24   -> LPLD_UART_PutChar
       0   __NVIC_EnableIRQ


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      40  Blue_Init
      66  Camera_DMA_Init
     172  Camera_GPIO_Init
     116  Camera_Handler
      18  Camera_Init
      44  DMA_init_struct
      80  Data_init_struct
          PCLK_init_struct
          HRF_init_struct
          VSY_init_struct
   25280  Img_Data
      12  Row_Count
          Field_Count
          Has_Img
      90  Send_Img
      24  __NVIC_EnableIRQ
      28  uart_init_struct

 
 25 444 bytes in section .bss
    582 bytes in section .text
 
    582 bytes of CODE memory
 25 444 bytes of DATA memory

Errors: none
Warnings: 1
