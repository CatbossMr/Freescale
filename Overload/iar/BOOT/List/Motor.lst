###############################################################################
#
# IAR ANSI C/C++ Compiler V8.20.2.14835/W32 for ARM       08/Mar/2018  21:10:24
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\app\Motor.c
#    Command line =  
#        -f C:\Users\JoyC\AppData\Local\Temp\EWD0D9.tmp
#        (D:\workspace\LPLD_OSKinetis_V3\project\Overload\app\Motor.c -D
#        LPLD_K60 -D USE_K60DZ10 -lCN
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\BOOT\List -lB
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\BOOT\List -o
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\BOOT\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "D:\Program Files\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\app\ -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\CPU\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\common\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\LPLD\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\FatFs\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\USB\common\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\USB\class\
#        -Ol -I "D:\Program Files\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\Include\" -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\BOOT\List\Motor.lst
#    Object file  =  
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\BOOT\Obj\Motor.o
#
###############################################################################

D:\workspace\LPLD_OSKinetis_V3\project\Overload\app\Motor.c
      1          #include "include.h"
      2          

   \                                 In section .bss, align 4
      3          FTM_InitTypeDef motor_PWM_init_struct;
   \                     motor_PWM_init_struct:
   \   00000000                      DS8 28
      4          

   \                                 In section .text, align 2, keep-with-next
      5          void Motor_Init(void)
      6          {
   \                     Motor_Init: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
      7            motor_PWM_init_struct.FTM_Ftmx=FTM0;
   \   00000002   0x....             LDR.N    R0,??DataTable1  ;; 0x40038000
   \   00000004   0x....             LDR.N    R1,??DataTable1_1
   \   00000006   0x6008             STR      R0,[R1, #+0]
      8            motor_PWM_init_struct.FTM_Mode= FTM_MODE_PWM;
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x....             LDR.N    R1,??DataTable1_1
   \   0000000C   0x7108             STRB     R0,[R1, #+4]
      9            motor_PWM_init_struct.FTM_PwmFreq=10000;
   \   0000000E   0xF242 0x7010      MOVW     R0,#+10000
   \   00000012   0x....             LDR.N    R1,??DataTable1_1
   \   00000014   0x6088             STR      R0,[R1, #+8]
     10            LPLD_FTM_Init(motor_PWM_init_struct);
   \   00000016   0x....             LDR.N    R1,??DataTable1_1
   \   00000018   0xB084             SUB      SP,SP,#+16
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0x221C             MOVS     R2,#+28
   \   0000001E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000022   0xBC0F             POP      {R0-R3}
   \   00000024   0x.... 0x....      BL       LPLD_FTM_Init
     11            
     12            LPLD_FTM_PWM_Enable(FTM0, FTM_Ch2, 0,PTC3,ALIGN_LEFT);
   \   00000028   0x2028             MOVS     R0,#+40
   \   0000002A   0x9000             STR      R0,[SP, #+0]
   \   0000002C   0x233F             MOVS     R3,#+63
   \   0000002E   0x2200             MOVS     R2,#+0
   \   00000030   0x2102             MOVS     R1,#+2
   \   00000032   0x....             LDR.N    R0,??DataTable1  ;; 0x40038000
   \   00000034   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
     13            LPLD_FTM_PWM_Enable(FTM0, FTM_Ch3, 0,PTC4,ALIGN_LEFT);
   \   00000038   0x2028             MOVS     R0,#+40
   \   0000003A   0x9000             STR      R0,[SP, #+0]
   \   0000003C   0x2340             MOVS     R3,#+64
   \   0000003E   0x2200             MOVS     R2,#+0
   \   00000040   0x2103             MOVS     R1,#+3
   \   00000042   0x....             LDR.N    R0,??DataTable1  ;; 0x40038000
   \   00000044   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
     14          }
   \   00000048   0xBD07             POP      {R0-R2,PC}       ;; return
     15          

   \                                 In section .text, align 2, keep-with-next
     16          void Motor_Drive(uint32 duty)
     17          {
   \                     Motor_Drive: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     18            
     19            /*@@and@@@@@@@@*/
     20            LPLD_FTM_PWM_ChangeDuty(FTM0,FTM_Ch2,duty);
   \   00000004   0x0022             MOVS     R2,R4
   \   00000006   0x2102             MOVS     R1,#+2
   \   00000008   0x....             LDR.N    R0,??DataTable1  ;; 0x40038000
   \   0000000A   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     21            LPLD_FTM_PWM_ChangeDuty(FTM0,FTM_Ch3,duty);
   \   0000000E   0x0022             MOVS     R2,R4
   \   00000010   0x2103             MOVS     R1,#+3
   \   00000012   0x....             LDR.N    R0,??DataTable1  ;; 0x40038000
   \   00000014   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     22          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     motor_PWM_init_struct

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Motor_Drive
         8   -> LPLD_FTM_PWM_ChangeDuty
      32   Motor_Init
        16   -> LPLD_FTM_Init
        16   -> LPLD_FTM_PWM_Enable
        32   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
      26  Motor_Drive
      74  Motor_Init
      28  motor_PWM_init_struct

 
  28 bytes in section .bss
 108 bytes in section .text
 
 108 bytes of CODE memory
  28 bytes of DATA memory

Errors: none
Warnings: 1
