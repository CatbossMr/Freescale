###############################################################################
#
# IAR ANSI C/C++ Compiler V8.20.2.14835/W32 for ARM       08/Mar/2018  21:10:24
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\app\Overload.c
#    Command line =  
#        -f C:\Users\JoyC\AppData\Local\Temp\EWD1F4.tmp
#        (D:\workspace\LPLD_OSKinetis_V3\project\Overload\app\Overload.c -D
#        LPLD_K60 -D USE_K60DZ10 -lCN
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\BOOT\List -lB
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\BOOT\List -o
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\BOOT\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "D:\Program Files\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\app\ -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\CPU\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\common\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\LPLD\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\LPLD\HW\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\FatFs\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\FatFs\option\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\USB\common\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\USB\driver\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\USB\descriptor\
#        -I
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\..\..\..\lib\USB\class\
#        -Ol -I "D:\Program Files\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\Include\" -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\BOOT\List\Overload.lst
#    Object file  =  
#        D:\workspace\LPLD_OSKinetis_V3\project\Overload\iar\BOOT\Obj\Overload.o
#
###############################################################################

D:\workspace\LPLD_OSKinetis_V3\project\Overload\app\Overload.c
      1          /**
      2           * --------------基于"拉普兰德K60底层库V3"的工程（Overload）-----------------
      3           * @file Overload.c
      4           * @version 0.0
      5           * @date 2013-9-29
      6           * @brief 关于该工程的描述
      7           *
      8           * 版权所有:北京拉普兰德电子技术有限公司
      9           * http://www.lpld.cn
     10           * mail:support@lpld.cn
     11           * 硬件平台:  LPLD K60 Card / LPLD K60 Nano
     12           *
     13           * 本工程基于"拉普兰德K60底层库V3"开发，
     14           * 所有开源代码均在"lib"文件夹下，用户不必更改该目录下代码，
     15           * 所有用户工程需保存在"project"文件夹下，以工程名定义文件夹名，
     16           * 底层库使用方法见相关文档。 
     17           *
     18           */
     19          #include "include.h"
     20          

   \                                 In section .text, align 2, keep-with-next
     21          void main (void)
     22          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     23            DisableInterrupts;
   \   00000002   0xB672             CPSID    I
     24            LCD_Init();
   \   00000004   0x.... 0x....      BL       LCD_Init
     25            Draw_MyLogo();
   \   00000008   0x.... 0x....      BL       Draw_MyLogo
     26            Server_Init();
   \   0000000C   0x.... 0x....      BL       Server_Init
     27            Key_Init();
   \   00000010   0x.... 0x....      BL       Key_Init
     28            EnableInterrupts;
   \   00000014   0xB662             CPSIE    I
     29            
     30            while(1)
   \                     ??main_0: (+1)
   \   00000016   0xE7FE             B.N      ??main_0
     31            {
     32              
     33            } 
     34            
     35          }
     36          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   main
         8   -> Draw_MyLogo
         8   -> Key_Init
         8   -> LCD_Init
         8   -> Server_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      24  main

 
 24 bytes in section .text
 
 24 bytes of CODE memory

Errors: none
Warnings: none
